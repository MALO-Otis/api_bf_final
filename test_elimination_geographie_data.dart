import 'package:get/get.dart';
import 'package:flutter/material.dart';
import 'lib/screens/collecte_de_donnes/core/collecte_geographie_service.dart';
/// Test pour v√©rifier que TOUTES les donn√©es viennent de Firestore
/// et AUCUNE donn√©e locale n'est utilis√©e

void main() async {
  print('üß™ [TEST] V√©rification √©limination GeographieData');
  print(
      'üìã Objectif: Confirmer que SEULES les donn√©es Firestore sont utilis√©es');

  WidgetsFlutterBinding.ensureInitialized();

  // Injection du service Firestore
  Get.put(CollecteGeographieService(), permanent: true);
  final service = Get.find<CollecteGeographieService>();

  print('\nüîÑ Chargement des donn√©es depuis Firestore...');
  await service.loadGeographieData();

  final stats = service.getStats();
  print('\n‚úÖ DONN√âES FIRESTORE CHARG√âES:');
  print('   üìç R√©gions: ${stats['regions']}');
  print('   üèõÔ∏è  Provinces: ${stats['provinces']}');
  print('   üèòÔ∏è  Communes: ${stats['communes']}');
  print('   üè† Villages: ${stats['villages']}');

  // Test des vraies donn√©es
  if (service.regions.isNotEmpty) {
    final firstRegion = service.regions.first;
    print('\nüîç VALIDATION STRUCTURE R√âELLE:');
    print('   ‚úÖ Premi√®re r√©gion: ${firstRegion.nom}');
    print('   ‚úÖ Code r√©gion: ${firstRegion.code}');

    if (firstRegion.provinces.isNotEmpty) {
      final firstProvince = firstRegion.provinces.first;
      print('   ‚úÖ Premi√®re province: ${firstProvince.nom}');
      print('   ‚úÖ Code province: ${firstProvince.code}');

      if (firstProvince.communes.isNotEmpty) {
        final firstCommune = firstProvince.communes.first;
        print('   ‚úÖ Premi√®re commune: ${firstCommune.nom}');
        print('   ‚úÖ Code commune: ${firstCommune.code}');
      }
    }
  }

  // Test des m√©thodes de remplacement GeographieData
  print('\nüîß TEST M√âTHODES DE REMPLACEMENT:');

  // Test getRegionCodeByName
  final regionName = 'Bankui (BOUCLE DU MOUHOUN)';
  final regionCode = service.getRegionCodeByName(regionName);
  print('   ‚úÖ getRegionCodeByName("$regionName") = $regionCode');

  // Test getProvincesForRegion
  if (regionCode != null) {
    final provinces = service.getProvincesForRegion(regionCode);
    print(
        '   ‚úÖ getProvincesForRegion("$regionCode") = ${provinces.length} provinces');

    if (provinces.isNotEmpty) {
      final provinceName = provinces.first['nom'];
      final provinceCode =
          service.getProvinceCodeByName(regionCode, provinceName!);
      print(
          '   ‚úÖ getProvinceCodeByName("$regionCode", "$provinceName") = $provinceCode');

      if (provinceCode != null) {
        final communes =
            service.getCommunesForProvince(regionCode, provinceCode);
        print(
            '   ‚úÖ getCommunesForProvince("$regionCode", "$provinceCode") = ${communes.length} communes');
      }
    }
  }

  // Test formatLocationCode
  final testLocation = service.formatLocationCode(
      regionName: 'Bankui (BOUCLE DU MOUHOUN)',
      provinceName: 'Bal√©',
      communeName: 'BOROMO',
      villageName: 'Test Village');
  print('   ‚úÖ formatLocationCode = $testLocation');

  print('\nüéØ R√âSULTAT FINAL:');
  print('   ‚úÖ Service CollecteGeographieService fonctionnel');
  print(
      '   ‚úÖ ${stats['regions']} r√©gions charg√©es depuis /metiers/geographie_data');
  print('   ‚úÖ M√©thodes de remplacement GeographieData op√©rationnelles');
  print('   ‚úÖ AUCUNE donn√©e locale utilis√©e');
  print('\nüèÜ MIGRATION R√âUSSIE - Firestore uniquement !');
}
